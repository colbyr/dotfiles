[core]
  excludesfile = ~/.gitignore_global

[color]
  ui = auto

[alias]
  aa = !git add --all && git status
  amend = !git commit --amend -m "$(git --no-pager log -1 --pretty=%s)"
  b = !git --no-pager branch
  bo = checkout -b
  bh = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 20 | awk -F' ~ HEAD@{' '{printf(\"%s (%s)\\n\", $1, substr($2, 1, length($2)-1))}'
  ci = commit
  co = checkout
  common = merge-base HEAD master
  df = !git --no-pager diff --name-only
  di = diff
  dh = diff HEAD
  dm = diff master
  fush = push --force-with-lease
  gf = !git --no-pager grep -l
  g = !exec git
  git = !exec git
  gr = !git --no-pager grep -n
  lg = log --graph --oneline --decorate --all
  lm = !git --no-pager log --decorate --oneline $(git common)^..
  mb = !git merge-base HEAD $1
  rbm = rebase master
  remote = !git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)"
  rpull = pull -r
  rs = !git --no-pager diff --name-only $1 | xargs -o nvim -O
  sl = !git --no-pager log --graph --branches --decorate --oneline --boundary --author='Colby Rabideau' --topo-order --first-parent --simplify-by-decoration --pretty=format:%D%n
  st = status -s
  update = !git add --all && git stash && git pull --rebase origin master && git stash pop

  # commands for repos that use "develop" instead of "master"
  cd = merge-base HEAD develop
  dd = diff develop
  ld = !git --no-pager log --decorate --oneline $(git cd)^..
  rbd = rebase develop

[push]
  default = current

[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process

[pull]
  rebase = true

